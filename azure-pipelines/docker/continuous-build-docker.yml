# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
trigger:
  branches:
    include:
      - PIC123/feat-docker
      - refs/tags/{docker*}
pr: none # disable CI build for PR

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

  
- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'

- task: AzureCLI@1
  inputs:
    connectedServiceNameARM: 'PELITTLE TEAM - CSE DWR (d36d0808-a967-4f73-9fdc-32ea232fc81d)'
    scriptLocation: 'inlineScript'
    inlineScript: './scripts/connect-acr.sh'

- bash: | 
    set -e
    
    export DISPLAY=:99.0
    echo "Starting Build"

    REGISTRY=upskillBedrockRegistry
    VERSION=latest # $(npm version patch)
    CONTAINER_NAME=vott-container
    AZURE_SUB_NAME="PELITTLE TEAM - CSE DWR"
    AZURE_SUB_ID=d36d0808-a967-4f73-9fdc-32ea232fc81d

    npm ci  # do a clean install
    # npm run compile

    # npm run test:ci # don't watch and just run all the tests
    npm run build

    # echo "Setting Azure subscription to: ${AZURE_SUB_NAME}"
    # az account set --subscription ${AZURE_SUB_ID}

    # echo "Logging into ACR ${REGISTRY}"
    # az acr login --name ${REGISTRY}

    # docekr build --rm -f Dockerfile -t vott-container:latest .

    echo "Building image ${CONTAINER_NAME}:${VERSION}..."
    docker build --no-cache -t ${CONTAINER_NAME}:${VERSION} -t ${CONTAINER_NAME}:latest .

    echo "Tagging image ${CONTAINER_NAME} ${REGISTRY}.azurecr.io/${CONTAINER_NAME}:${VERSION} and latest"
    docker tag ${CONTAINER_NAME} ${REGISTRY}.azurecr.io/${CONTAINER_NAME}:${VERSION}
    docker tag ${CONTAINER_NAME} ${REGISTRY}.azurecr.io/${CONTAINER_NAME}:latest

    echo "Pushing image to: ${REGISTRY}.azurecr.io/${CONTAINER_NAME} and ${CONTAINER_NAME}:latest"
    docker push ${REGISTRY}.azurecr.io/${CONTAINER_NAME}:${VERSION}
    docker push ${REGISTRY}.azurecr.io/${CONTAINER_NAME}:latest

  displayName: 'Run docker build'
